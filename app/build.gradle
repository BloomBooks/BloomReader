apply plugin: 'com.android.application'
apply plugin: 'com.github.triplet.play'
// This is the master definition of what version of Bloom Reader we are building
def versionMajor = 1
def versionMinor = 0
def versionRelease = project.ext.properties['build.number'] ?: 0 // default for non-tc

// Load our credentials
def fileName = "${System.properties['user.home']}${File.separator}keystore${File.separator}keystore_bloom_reader.properties"
def keystoreProperties
if (rootProject.file(fileName).exists()) {
    def keystorePropertiesFile = rootProject.file(fileName)
    keystoreProperties = new Properties()
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}

android {
    compileSdkVersion 23
    buildToolsVersion "25.0.0"

    playAccountConfigs {
        defaultAccountConfig {
            if (keystoreProperties) {
                jsonFile = file(keystoreProperties['serviceAccountJsonFile'])
            }
        }
    }

    defaultConfig {
        applicationId "org.sil.bloom.reader"
        minSdkVersion 19
        targetSdkVersion 22
        versionCode versionMajor * 100000 + versionMinor * 1000 + versionRelease.toInteger()
        versionName "${versionMajor}.${versionMinor}.${versionRelease}"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary true
        buildConfigField "long", "TIMESTAMP", System.currentTimeMillis() + "L"
        playAccountConfig = playAccountConfigs.defaultAccountConfig
    }

    signingConfigs {
        release {
            if (keystoreProperties) {
                storeFile file(keystoreProperties['storeFile'])
                storePassword keystoreProperties['storePassword']
                keyAlias keystoreProperties['keyAlias']
                keyPassword keystoreProperties['keyPassword']
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
        debug {
            applicationIdSuffix ".debug"
        }
    }

    productFlavors {
        alpha {
            applicationIdSuffix ".alpha"
            versionNameSuffix "-alpha"
            signingConfig signingConfigs.release
        }
        beta {
            applicationIdSuffix ".beta"
            versionNameSuffix "-beta"
            signingConfig signingConfigs.release
        }
        production {
            // no id or version name suffix; this is the main product.
            signingConfig signingConfigs.release
        }
    }

    play {
        track = 'alpha'
        uploadImages = true
    }
}

repositories {
    mavenCentral()
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile 'com.android.support:appcompat-v7:23.4.0'
    compile 'com.android.support:support-v4:23.4.0'
    compile 'com.android.support:recyclerview-v7:23.4.0'
    compile 'com.android.support:design:23.4.0'
    // Supports the WiFi module's 'server' used to receive books from Bloom desktop
    compile 'cz.msebera.android:httpclient:4.4.1.2'
    compile 'commons-io:commons-io:2.4'
    testCompile 'junit:junit:4.12'
}
